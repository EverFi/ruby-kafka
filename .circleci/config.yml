references:
  docker_container_ruby: &docker_container_ruby
    docker:
      - image: circleci/ruby:2.5.3
    working_directory: ~/repo

  restore_repo_cache: &restore_repo_cache
    restore_cache:
      keys:
        - v1-ruby-kafka-{{ .Environment.CIRCLE_SHA1 }}

  restore_gem_cache: &restore_gem_cache
    restore_cache:
        keys:
          - v1-gems-{{ checksum "Gemfile.lock" }}-{{ checksum "ruby-kafka.gemspec" }}

  attach_workspace: &attach_workspace
    attach_workspace:
      at: ~/repo

  install_bundle: &install_bundle
    run:
      command: |
        gem install bundler
        bundle install --jobs=4 --retry=3 --path vendor/bundle

version: 2
jobs:
  test_and_build:
    <<: *docker_container_ruby

    steps:
      - checkout
      - *restore_gem_cache
      - *install_bundle

      - run:
          name: Ensure Gemfile.lock is up to date if it is a committed file
          command: |
            if git diff-index --quiet HEAD -- Gemfile.lock
            then
              exit 0
            else
              echo "Please ensure that you have bundled and committed any"
              echo "resulting changes to the Gemfile.lock file in this repo."
              git --no-pager diff -- Gemfile.lock
              exit 128
            fi

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-gems-{{ checksum "Gemfile.lock" }}-{{ checksum "ruby-kafka.gemspec" }}

      - run:
          name: run ruby specs
          command: |
            mkdir -p /tmp/test-results/rspec

            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec \
              --tag ~skip_on_ci \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec/results.xml \
              $TEST_FILES

      - store_test_results:
          path: /tmp/test-results

      - run: bundle exec rake build

      - persist_to_workspace:
          root: ~/repo
          paths: pkg/*.gem

  publish_gem:
    <<: *docker_container_ruby
    steps:
      - checkout
      - *attach_workspace

      - run:
          command: |
            GEM_VERSION=`ruby -r./lib/foundry/message_bus/version.rb -e "puts Kafka::VERSION"`
            if [ "$CIRCLE_TAG" = "v$GEM_VERSION" ]
            then
              curl \
                -F "package=@pkg/ruby-kafka-$GEM_VERSION.gem" \
                "https://$GEMFURY_PUSH_TOKEN@push.fury.io/everfi/"
            else
              echo "VERSION string $GEM_VERSION does not match git tag $CIRCLE_TAG"
              exit 1
            fi

workflows:
  version: 2
  gem_test_and_release:
    jobs:
      - test_and_build:
          filters:
            tags:
              only: /.*/
      - publish_gem:
          context: foundry-gem
          requires:
            - test_and_build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
